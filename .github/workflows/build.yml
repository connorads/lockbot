name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - name: Setup DynamoDB Local
        uses: rrainn/dynamodb-action@v2.0.0
      - name: Setup AWS credentials
        run: |
          mkdir ~/.aws
          echo -e "[default]\naws_access_key_id=''\naws_secret_access_key=''" > ~/.aws/credentials
      - name: Setup Serverless Offline & Run Tests
        run: yarn ci
      - name: Coveralls
        uses: coverallsapp/github-action@v1.1.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  deploy-dev:
    needs: [build]
    runs-on: ubuntu-20.04
    environment: dev
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Serverless Deploy
        run: yarn deploy --region eu-west-1 --stage dev
        env:
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_CLIENT_ID: ${{ secrets.SLACK_CLIENT_ID }}
          SLACK_CLIENT_SECRET: ${{ secrets.SLACK_CLIENT_SECRET }}
          STATE_SECRET: ${{ secrets.STATE_SECRET }}
  deploy-prod:
    needs: [deploy-dev]
    runs-on: ubuntu-20.04
    environment: prod
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Serverless Deploy
        run: yarn deploy --region eu-west-1 --stage prod
        env:
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_CLIENT_ID: ${{ secrets.SLACK_CLIENT_ID }}
          SLACK_CLIENT_SECRET: ${{ secrets.SLACK_CLIENT_SECRET }}
          STATE_SECRET: ${{ secrets.STATE_SECRET }}
